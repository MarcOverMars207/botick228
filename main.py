# -*- coding: utf-8 -*-
import telebot
from telebot import types
import requests
from io import BytesIO

# –ó–∞–º–µ–Ω–∏—Ç–µ 'YOUR_BOT_TOKEN' –Ω–∞ –≤–∞—à —Ç–æ–∫–µ–Ω
TOKEN = '6698019340:AAF7388yf84RY-Dk_xNHz5K1GUODA-buboo'

# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä telebot
bot = telebot.TeleBot(TOKEN)

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_states = {}

# –°–ª–æ–≤–∞—Ä—å —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ç–∞—Ä–∏—Ñ–∞—Ö
tariffs = {
    '\U0001F308M–∏–Ωu –ø–∞–∫\U0001F496': {
        '—Ü–µ–Ω–∞': '199‚ÇΩ ',
        '—Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è': '30 –¥–Ω–µ–π',
        '–æ–ø–∏—Å–∞–Ω–∏–µ': '–î–∞–Ω–Ω—ã–π –ø–∞–∫ –ø–æ–¥–æ–π–¥—ë—Ç —Ç–µ–º, –∫—Ç–æ –ø–æ—Å–µ—Ç–∏–ª –Ω–∞—Å –≤–ø–µ—Ä–≤—ã–µ, —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏—à—å –º–∞–ª—É—é —á–∞—Å—Ç—å –≤—Å–µ—Ö –ø–∞–∫–æ–≤\U0001F970',
    },
    '\U0001F349…Ø·¥ã0·¥ß—åH–∏—Ü—ã\U0001F4A6': {
        '—Ü–µ–Ω–∞': '399‚ÇΩ ',
        '—Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è': '30 –¥–Ω–µ–π',
        '–æ–ø–∏—Å–∞–Ω–∏–µ': ' \U0001F919–∑·¥Ä·¥®·¥©·¥á—â·¥á–Ω–Ω—ã·¥á ·¥®–æ·¥©–Ω–æ  ô–∏–¥·¥á–æ ·¥Ñ –¥·¥Ä·¥©·¥ã–Ω·¥á·¥õ·¥Ä ·¥Ñ–æ …Ø·¥ã–æ–¥–Ω–∏—Ü·¥Ä ç–∏ \U0001F919·¥ã·¥Ä—á·¥á·¥Ñ·¥õ ô·¥á–Ω–Ω—ã–π ·¥ã–æ–Ω·¥õ·¥á–Ω·¥õ –∏–∑ ·¥Ñ·¥Ä ç–æ·¥¶–æ –¥·¥Ä·¥©·¥ã–Ω·¥á·¥õ·¥Ä! \U0001F919–¥–æ·¥Ñ·¥õ—É·¥® ·¥ã 9700  ô–∏–¥·¥á–æ, –æ–±–Ω–æ ô·¥ß·¥á–Ω–∏·¥á ·¥©·¥Ä–∑  ô ·¥õ·¥©–∏ –¥–Ω—è, ·¥®·¥©–∏ ·¥®–æ·¥ã—É·¥®·¥ã·¥á –¥·¥Ä–Ω–Ω–æ·¥¶–æ ·¥õ·¥Ä·¥©–∏…∏·¥Ä  ô—ã ·¥®–æ·¥ß—É—á·¥Ä·¥á·¥õ·¥á: \U00002705 –∑·¥Ä·¥ã·¥©—ã·¥õ—ã–π ·¥ã·¥Ä–Ω·¥Ä·¥ß –¥·¥ß—è ·¥ã·¥ß–∏·¥á–Ω·¥õ–æ ô \U00002705 ·¥©·¥á–∑·¥á·¥© ô–Ω—ã·¥á ·¥¶·¥©—É·¥®·¥®—ã –Ω·¥Ä ·¥Ñ·¥ß—É—á·¥Ä–π –±·¥ß–æ·¥ã–∏·¥©–æ ô·¥ã–∏ \U00002705 –Ω·¥á–æ–±—Ö–æ–¥–∏ ç—ã·¥á –∏–Ω·¥Ñ·¥õ·¥©—É·¥ã—Ü–∏–∏, ·¥®·¥©–æ ç–æ·¥Ä·¥ã—Ü–∏–∏ –∏ ·¥õ.–¥\U0001F308',
    },
    '\U0001F48Bm–∞–ª—ã—àku\U0001F525': {
        '—Ü–µ–Ω–∞': '499‚ÇΩ ',
        '—Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è': '90 –¥–Ω–µ–π',
        '–æ–ø–∏—Å–∞–Ω–∏–µ': '–î–∞–Ω–Ω—ã–π –ø–∞–∫ —Å–æ–¥–µ—Ä–∂–∏—Ç –≤ —Å–µ–±–µ –º–Ω–æ–∂–µ—Å—Ç–≤–æ —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ <16\U0001F9C1\U0001F36D –¢–∞–∫–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç —Ç–æ—á–Ω–æ –Ω–µ –æ—Å—Ç–∞–≤–∏—Ç –Ω–∏–∫–æ–≥–æ —Ä–∞–≤–Ω–æ–¥—É—à–Ω—ã–º\U0001F33A –ü–æ–ª—É—á–∞–µ—Ç–µ –¥–æ—Å—Ç—É–ø –≤ –ø—Ä–∏–≤–∞—Ç–Ω—É—é –≥—Ä—É–ø–ø—É\U00002705 –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ —Ä–∞–∑ –≤ —Ç—Ä–∏ –¥–Ω—è\U00002705 –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Å 08 –¥–æ 22 –ø–æ –ú–°–ö\U00002705',
    },
    '\U0001F351·¥ßu…Ø·¥á–Ω–∏·¥á  ç@·¥ß–æ·¥ß·¥á·¥õ–æ·¥ã\U0001F308': {
        '—Ü–µ–Ω–∞': '499',
        '—Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è': '120 –¥–Ω–µ–π',
        '–æ–ø–∏—Å–∞–Ω–∏–µ': ' \U0001F34C–¥–æ·¥Ñ·¥õ è·¥®  ô ·¥ã`·¥Ä–Ω·¥Ä·¥ß ·¥Ñ 1 918  ô–∏·¥Ö·¥á–æ –∏ 73·¥è …∏·¥è·¥õ0 3·¥Ä·¥®·¥ò·¥á—â·¥á ú–Ω0·¥¶·¥è ·¥ã0–Ω·¥õ·¥á–Ω·¥õ·¥Ä ·¥Ñ·¥Ä ç—ã—Ö  ç·¥Ä ü·¥á ú—å·¥ã–∏x ·¥Ö·¥á·¥õ·¥á–π  ô–æ3·¥ò·¥Ä·¥Ñ·¥õ0 ç ·¥Ö–æ 6·¥ä ü·¥á·¥õ...–∂–∂–∂·¥á·¥Ñ·¥õ—å, ·¥ã0–Ω·¥õ·¥á–Ω·¥õ ·¥Ñ–æ–±·¥©·¥Ä–Ω –∑·¥Ä  ô·¥Ñ·¥á  ô·¥©·¥á ç—è, –∏ –Ω–æ ô—ã–π –∏ ·¥Ñ·¥õ·¥Ä·¥©—ã–π –∏ ·¥Ñ–æ  ô·¥Ñ·¥á—Ö ·¥õ·¥á·¥ß·¥á·¥¶·¥©·¥Ä·¥ç ç ·¥ã·¥Ä–Ω·¥Ä·¥ß0 ô ·¥®·¥©–æ–¥·¥Ä—é—â–∏—Ö –∏ ç·¥á–Ω–Ω–æ œ∂·¥õ0·¥õ ·¥©·¥Ä3–¥·¥á·¥ß ·¥Ñ ·¥Ñ·¥Ä ç—ã ç–∏  ç·¥Ä·¥ß·¥á ú—å·¥ã–∏ ç·¥ú \U0001F36D ',

    },
    '\U00002728VIP —Ç–∞—Ä–∏—Ñ  ô·¥Ñ·¥á  ô·¥ã·¥ß—é—á·¥á–Ω–æ\U00002728': {
        '—Ü–µ–Ω–∞': '799‚ÇΩ ',
        '—Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è': '120 –¥–Ω–µ–π',
        '–æ–ø–∏—Å–∞–Ω–∏–µ': '–∏–∑–Ω·¥Ä·¥Ñ–∏·¥ß–æ ô·¥Ä–Ω–∏·¥á, ·¥ß–∏…Ø·¥á–Ω–∏·¥á  ç·¥Ä·¥ß–æ·¥ß·¥á·¥õ–æ·¥ã, …Ø·¥ã–æ·¥ß—å–Ω–∏—Ü—ã, ·¥®–æ·¥ß–Ω·¥Ä—è ·¥ã–æ–Ω…∏–∏–¥·¥á–Ω—Ü–∏·¥Ä·¥ß—å–Ω–æ·¥Ñ·¥õ—å, ·¥¶·¥Ä·¥©·¥Ä–Ω·¥õ–∏—è –Ω·¥Ä  ô–æ–∑ ô·¥©·¥Ä·¥õ ·¥Ñ·¥©·¥á–¥·¥Ñ·¥õ ô 15  ç–∏–Ω—É·¥õ ·¥Ñ  ç–æ ç·¥á–Ω·¥õ·¥Ä ·¥®–æ·¥ã—É·¥®·¥ã–∏, –∫—Ä—É–≥–ª–æ—Å—É—Ç–æ—á–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ VIP –∫–ª–∏–µ–Ω—Ç–æ–≤, —Ñ—É–ª–ª –ø–∞–∫–∏, –ø–æ–ª–Ω—ã–µ –æ—Ç–±–æ—Ä–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞, –æ—Ç–æ–±—Ä–∞–Ω–Ω–æ–≥–æ –∏ –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω–æ–≥–æ –Ω–∞–º–∏ –ª–∏—á–Ω–æ\U0001F496 ',
    },
}


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=False)
tech_support_button = types.KeyboardButton('–¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞')
my_subscription_button = types.KeyboardButton('–ú–æ—è –ø–æ–¥–ø–∏—Å–∫–∞')
tariffs_button = types.KeyboardButton('\U0001F36D–¢–∞—Ä–∏—Ñ—ã\U0001F525')
proofs_button = types.KeyboardButton('–î–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞')
support_button = types.KeyboardButton('–ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å –ø—Ä–æ–µ–∫—Ç\U0001F4B8')
keyboard.row(tech_support_button, my_subscription_button)
keyboard.row(tariffs_button, proofs_button, support_button)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start'])
def start(message):
    try:
        user = message.from_user

        bot.send_message(
            message.chat.id,
            f"–ü—Ä–∏–≤–µ—Ç, {user.first_name}!\n\n\n"
            "–ï–ô –í–°–ï–ì–û 15, –ê –£–ñ–ï –î–ï–õ–ê–ï–¢ –¢–ê–ö–û–ï ü•µ–í–µ—á–Ω–∞—è –≥–∞—Ä–∞–Ω—Ç–∏—è! –ö—Ä—É–≥–ª–æ—Å—É—Ç–æ—á–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞! –°–æ—á–Ω–µ–π—à–∏–π –∫–æ–Ω—Ç–µ–Ω—Çüí¶–¢–∞–∫–æ–≥–æ —Ç—ã –Ω–µ —É–≤–∏–¥–∏—à—å –±–æ–ª—å—à–µ –Ω–∏–≥–¥–µ üî•üíï–ñ–º–∏ –Ω–∞ ¬´–¢–∞—Ä–∏—Ñ—ã¬ª üí¶üëáüèª\n"
            "–ü–æ—Ç–µ—Ä—è —Å–≤—è–∑–∏- –ö–ª–∏–∫–∞–π \U0001F449 /start",

            reply_markup=keyboard
        )


        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—Ç–µ–∫ —Å–æ—Å—Ç–æ—è–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_states[message.chat.id] = []
    except Exception as e:
        print("–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ '/start':", str(e))


        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—Ç–µ–∫ —Å–æ—Å—Ç–æ—è–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_states[message.chat.id] = []
    except Exception as e:
        print("–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ '/start':", str(e))


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ "–ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å –ø—Ä–æ–µ–∫—Ç"
@bot.message_handler(func=lambda message: message.text == "–ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å –ø—Ä–æ–µ–∫—Ç\U0001F4B8", content_types=['text'])
def support_project(message):
    try:
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥" —Ç–æ–ª—å–∫–æ –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞
        keyboard_support = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=False)
        back_button = types.KeyboardButton('–ù–∞–∑–∞–¥')
        keyboard_support.row(back_button)

        bot.send_message(
            message.chat.id,
            "–ú—ã —Ä–∞–¥—ã —Å—Ç–∞—Ä–∞—Ç—å—Å—è –¥–ª—è –í–∞—Å\U00002764!–ü–æ–¥–¥–µ—Ä–∂–∏—Ç–µ –Ω–∞—à –ø—Ä–æ–µ–∫—Ç! –í–∞—à–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∞- —ç—Ç–æ –ø–æ–∫—É–ø–∫–∞ —É –Ω–∞—Å —Ç–∞—Ä–∏—Ñ–æ–≤! –ù–∞—Å –∂–¥—É—Ç —Å–≤–µ–∂–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ä–∞–∑ –≤ 3 –¥–Ω—è, –º—ã —Ä–∞–¥—ã —Å—Ç–∞—Ä–∞—Ç—å—Å—è –¥–ª—è –≤–∞—Å! ",
            reply_markup=keyboard_support
        )

        # –î–æ–±–∞–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ "–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞"
        user_states[message.chat.id].append(support_project)
    except Exception as e:
        print("–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ 'support_project':", str(e))


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ "–î–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞"
@bot.message_handler(func=lambda message: message.text == "–î–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞", content_types=['text'])
def proofs(message):
    try:
        user_states[message.chat.id].append(proofs)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç "–ò—Ö –Ω–µ—Ç"
        bot.send_message(
            message.chat.id,
            "–≠—Ç–æ –ª–∏—à—å –º–∞–ª–∞—è —á–∞—Å—Ç—å —Ç–æ–≥–æ, —á—Ç–æ –º—ã –º–æ–∂–µ–º –í–∞–º –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç—å, —Å–∫–æ—Ä–µ–µ –∑–∞—Ö–æ–¥–∏ –≤–æ –≤–∫–ª–∞–¥–∫—É –¢–∞—Ä–∏—Ñ—ã –∏ –æ—Ñ–æ—Ä–º–ª—è–π —Ç–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–Ω—Ä–∞–≤–∏–ª—Å—è\U0001F648 –õ—É—á—à–∏–π –∏ –æ—Ç–æ–±—Ä–∞–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç! –ù–∏–∫–∞–∫–æ–≥–æ —à–ª–∞–∫–∞, —Ç–æ–ª—å–∫–æ –≥–æ–¥–Ω—ã–π –º–∞—Ç–µ—Ä–∏–∞–ª \U0001F337"
        )

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –ø–æ URL
        photo_url = "https://i.imgur.com/JP51iim.jpeg"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π URL –≤–∞—à–µ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
        try:
            response = requests.get(photo_url)
            if response.status_code == 200:
                photo_data = BytesIO(response.content)
                bot.send_photo(message.chat.id, photo_data)
            else:
                bot.send_message(message.chat.id, "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ")
        except Exception as e:
            print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:", str(e))

        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
        keyboard_back = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=False)
        back_button = types.KeyboardButton('–ù–∞–∑–∞–¥')
        keyboard_back.add(back_button)

        bot.send_message(
            message.chat.id,
            "–í—ã –º–æ–∂–µ—Ç–µ –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é, –Ω–∞–∂–∞–≤ –∫–Ω–æ–ø–∫—É '–ù–∞–∑–∞–¥'",
            reply_markup=keyboard_back
        )
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
        keyboard_back = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=False)
        back_button = types.KeyboardButton('–ù–∞–∑–∞–¥')
        keyboard_back.add(back_button)
    except Exception as e:
        print("–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ 'proofs':", str(e))
# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ "–¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞"
@bot.message_handler(func=lambda message: message.text == "–¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞", content_types=['text'])
def tech_support(message):
    try:
        user_states[message.chat.id].append(tech_support)
        keyboard_back = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=False)
        back_button = types.KeyboardButton('–ù–∞–∑–∞–¥')
        keyboard_back.add(back_button)

        bot.send_message(
            message.chat.id,
            "–ü–∏—Å–∞—Ç—å —Ç–æ–ª—å–∫–æ –ø–æ –¥–µ–ª—É @xxc239 \n"
            "\U000026D4 \U000026D4 –ó–∞ –°–ü–ê–ú –º–æ–º–µ–Ω—Ç–∞–ª—å–Ω—ã–π –±–∞–Ω\U000026D4\U000026D4 ",
            reply_markup=keyboard_back
        )
    except Exception as e:
        print("–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ 'tech_support':", str(e))
# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ "–ú–æ—è –ø–æ–¥–ø–∏—Å–∫–∞"
@bot.message_handler(func=lambda message: message.text == "–ú–æ—è –ø–æ–¥–ø–∏—Å–∫–∞", content_types=['text'])
def my_subscription(message):
    user_states[message.chat.id].append(my_subscription)
    keyboard_back = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=False)
    back_button = types.KeyboardButton('–ù–∞–∑–∞–¥')
    keyboard_back.add(back_button)

    bot.send_message(
        message.chat.id,
        "–£ –≤–∞—Å –Ω–µ—Ç –¥–µ–π—Å—Ç–≤—É—é—â–µ–π –ø–æ–¥–ø–∏—Å–∫–∏. –û–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å —Ç–∞—Ä–∏—Ñ–∞–º–∏ –Ω–∞–∂–∞–≤ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–Ω–æ–ø–∫—É.",
        reply_markup=keyboard_back
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ "–¢–∞—Ä–∏—Ñ—ã"
@bot.message_handler(func=lambda message: message.text == "\U0001F36D–¢–∞—Ä–∏—Ñ—ã\U0001F525", content_types=['text'])
def view_tariffs(message):
    user_states[message.chat.id].append(view_tariffs)
    keyboard_back = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=False)
    back_button = types.KeyboardButton('–ù–∞–∑–∞–¥')
    keyboard_back.add(back_button)

    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ —Ç–∞—Ä–∏—Ñ–æ–≤
    tariff_buttons = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=False)
    for tariff_name in tariffs:
        tariff_buttons.add(types.KeyboardButton(tariff_name))

    bot.send_message(
        message.chat.id,
        "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∞—Ä–∏—Ñ –∏–∑ —Å–ø–∏—Å–∫–∞:",
        reply_markup=tariff_buttons
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —Ç–∞—Ä–∏—Ñ–∞
@bot.message_handler(func=lambda message: message.text in tariffs.keys(), content_types=['text'])
def select_item(message):
    user_choice = message.text

    if user_choice == '–ù–∞–∑–∞–¥':
        if user_states[message.chat.id]:
            user_states[message.chat.id].pop()
            if user_states[message.chat.id]:
                previous_state = user_states[message.chat.id][-1]
                if previous_state == tech_support:
                    tech_support(message)
                elif previous_state == my_subscription:
                    my_subscription(message)
                elif previous_state == view_tariffs:
                    view_tariffs(message)
            else:
                bot.send_message(
                    message.chat.id,
                    "–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
                    reply_markup=keyboard
                )
        return

    if user_choice in tariffs:
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ç–∞—Ä–∏—Ñ –≤ user_states
        user_states[message.chat.id].append(user_choice)
        tariff_info = tariffs[user_choice]
        message_text = f"–¢–∞—Ä–∏—Ñ: {user_choice}\n–¶–µ–Ω–∞: {tariff_info['—Ü–µ–Ω–∞']}\n–°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è: {tariff_info['—Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è']}\n–û–ø–∏—Å–∞–Ω–∏–µ: {tariff_info['–æ–ø–∏—Å–∞–Ω–∏–µ']}"
        bot.send_message(message.chat.id, message_text)

        keyboard_payment = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=False)
        payment_button = types.KeyboardButton('–û–ø–ª–∞—Ç–∏—Ç—å')
        back_button = types.KeyboardButton('–ù–∞–∑–∞–¥')
        keyboard_payment.row(payment_button, back_button)

        bot.send_message(
            message.chat.id,
            "–î–ª—è –æ–ø–ª–∞—Ç—ã –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É '–û–ø–ª–∞—Ç–∏—Ç—å'",
            reply_markup=keyboard_payment
        )

        user_states[message.chat.id].append(select_item)
    else:
        bot.send_message(
            message.chat.id,
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ç–∞—Ä–∏—Ñ –∏–∑ —Å–ø–∏—Å–∫–∞ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ '–ù–∞–∑–∞–¥'."
        )


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ "–û–ø–ª–∞—Ç–∏—Ç—å"
@bot.message_handler(func=lambda message: message.text == "–û–ø–ª–∞—Ç–∏—Ç—å", content_types=['text'])
def payment(message):
    try:
        user_choice = message.text
        if user_choice == '–û–ø–ª–∞—Ç–∏—Ç—å':
            # –ü–æ–ª—É—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º —Ç–∞—Ä–∏—Ñ
            selected_tariff = user_states[message.chat.id][-2]  # –ü—Ä–µ–¥–ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç —Å—Ç–µ–∫–∞ - –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ç–∞—Ä–∏—Ñ
            requisites = "2204 3101 5149 1555"  # –í–∞—à–∏ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã

            bot.send_message(
                message.chat.id,
                f"–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã: –ü–µ—Ä–µ–≤–æ–¥ –Ω–∞ –∫–∞—Ä—Ç—É –ø–æ \U00002757\U00002757\U00002757–°–ë–ü\U00002757\U00002757\U00002757"
                f"\n\n"
                f"–î–ª—è –æ–ø–ª–∞—Ç—ã —Ç–∞—Ä–∏—Ñ–∞ '{selected_tariff}' –ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –ø–µ—Ä–µ–≤–æ–¥ –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã: {requisites}, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç –ø–µ—Ä–µ–≤–æ–¥–∞ (–Ω–µ –¥–æ–∫—É–º–µ–Ω—Ç) –∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É '–Ø –æ–ø–ª–∞—Ç–∏–ª'"
            )



            # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–Ø –æ–ø–ª–∞—Ç–∏–ª"
            keyboard_confirm_payment = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=False)
            confirm_payment_button = types.KeyboardButton('–Ø –æ–ø–ª–∞—Ç–∏–ª')
            back_button = types.KeyboardButton('–ù–∞–∑–∞–¥')
            keyboard_confirm_payment.row(confirm_payment_button, back_button)

            bot.send_message(
                message.chat.id,
                "–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É '–Ø –æ–ø–ª–∞—Ç–∏–ª'",
                reply_markup=keyboard_confirm_payment
            )


            user_states[message.chat.id].append(payment)
    except Exception as e:
        print("–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ 'payment':", str(e))


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ "–Ø –æ–ø–ª–∞—Ç–∏–ª"
@bot.message_handler(func=lambda message: message.text == "–Ø –æ–ø–ª–∞—Ç–∏–ª", content_types=['text'])
def confirm_payment(message):
    try:


        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
        keyboard_main_menu = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=False)
        main_menu_button = types.KeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
        keyboard_main_menu.row(main_menu_button)

        bot.send_message(
            message.chat.id,
            "–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞–ª—å–Ω–µ–π—à–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
            reply_markup=keyboard_main_menu
        )

        # –í–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –∫ –≥–ª–∞–≤–Ω–æ–º—É –º–µ–Ω—é
        if user_states[message.chat.id]:
            user_states[message.chat.id].pop()  # –£–¥–∞–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ "confirm_payment"
    except Exception as e:
        print("–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ 'confirm_payment':", str(e))



# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ–∂–∏–¥–∞–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–≤–∏—Ç–∞–Ω—Ü–∏–∏
@bot.message_handler(content_types=['photo'])
def waiting_receipt(message):
    try:
        # –ó–∞–º–µ–Ω–∏—Ç–µ 'ADMIN_CHAT_ID' –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π chat_id –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        admin_chat_id = '6406455642'

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
        bot.send_photo(chat_id=admin_chat_id, photo=message.photo[-1].file_id)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        bot.send_message(
            message.chat.id,
            "–ö–≤–∏—Ç–∞–Ω—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–∂–∏–¥–∞–π—Ç–µ."
        )

        # –í–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–º—É —Å–æ—Å—Ç–æ—è–Ω–∏—é (–∫–Ω–æ–ø–∫–∞ "–Ø –æ–ø–ª–∞—Ç–∏–ª")
        if user_states[message.chat.id]:
            user_states[message.chat.id].pop()
    except Exception as e:
        print("–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ 'waiting_receipt':", str(e))

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
@bot.message_handler(func=lambda message: message.text == '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', content_types=['text'])
def main_menu(message):
    try:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
        bot.send_message(
            message.chat.id,
            "–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞–ª—å–Ω–µ–π—à–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
            reply_markup=keyboard  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
        )

        # –û—á–∏—â–∞–µ–º —Å—Ç–µ–∫ —Å–æ—Å—Ç–æ—è–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_states[message.chat.id] = []
    except Exception as e:
        print("–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ 'main_menu':", str(e))

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ "–ù–∞–∑–∞–¥"
@bot.message_handler(func=lambda message: message.text == "–ù–∞–∑–∞–¥", content_types=['text'])
def go_back(message):
    try:
        if user_states[message.chat.id]:
            user_states[message.chat.id].pop()
        bot.send_message(
            message.chat.id,
            "–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
            reply_markup=keyboard  # –û–±–Ω–æ–≤–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –Ω–∞ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        )
    except Exception as e:
        print("–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ 'go_back':", str(e))


if __name__ == '__main__':
    while True:
        try:
            bot.polling(none_stop=True)
        except Exception as e:
            print("–û—à–∏–±–∫–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º —Ü–∏–∫–ª–µ:", str(e))

